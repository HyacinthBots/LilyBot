basic.enabled=Enabled
basic.disabled=Disabled
basic.true=True
basic.false=False
basic.none=None
basic.yes=Yes
basic.no=No
basic.null=Null
basic.default=Default
basic.unableTo.tag=Unable to get username
basic.unableTo.mention=Unable to get user mention
basic.requestedBy=Requested by {0}
basic.userField=User:

# Naming format. package(or purpose).group.(subGroup.)name

config.name=config
config.description=Configure Lily's Settings
config.configuredBy=Configured by {0}
config.considerUtility=Consider setting a utility config to log changes to configurations
config.configAlreadyExists=You already have a {0} configuration set. Please clear it before attempting to set a new one.
config.invalidChannel=The {0} you've selected is invalid, or I can't view it. Please attempt to resolve this and try again.
config.unableTo.mention=Unable to get channel mention
config.unableTo.name=Unable to get channel name
config.moderation.name=moderation
config.moderation.description=Configure Lily's moderation system
config.moderation.systemDisabled=Moderation system disabled
config.moderation.roleAndChannelRequired=You must set both the moderator role and the action log channel to use the moderation configuration.
config.moderation.roleNotPingable=I cannot use the role: {0}, because it is not mentionable by regular users. Please enable this in the role settings, or use a different role.
config.moderation.embed.title=Configuration: Moderation
config.moderation.embed.moderatorsFieldName=Moderators
config.moderation.embed.actionLogFieldName=Action Log
config.moderation.embed.logPubliclyFieldName=Log Publicly
config.moderation.embed.quickTimeoutLength.name=Quick timeout length
config.moderation.embed.quickTimeoutLength.disabled=No quick timeout message set
config.moderation.embed.warningAutoPunishmentsName=Warning Auto-punishments
config.moderation.embed.banDmMessage.name=Ban DM Message
config.moderation.embed.banDmMessage.disabled=No custom Ban DM message set
config.moderation.embed.dmDefault.name=DM Default
config.moderation.embed.dmDefault.true=DM argument will default to true
config.moderation.embed.dmDefault.false=DM argument will default to false
config.moderation.embed.autoInviteRoleName=Auto-invite Moderator Role
config.moderation.embed.memberRoleChangesName=Log member role changes
config.logging.name=logging
config.logging.description=Configure Lily's logging system
config.logging.memberMissing=You must specify a channel to log members joining and leaving too!
config.logging.editMissing=You must specify a channel to log deleted/edited messages too!
config.logging.publicMemberMissing=You must specify a channel to publicly log members joining and leaving too!
config.logging.embed.title=Configuration: Logging
config.logging.embed.messageDeleteFieldName=Message Delete Logs
config.logging.embed.messageEditFieldName=Message Edit Logs
config.logging.embed.memberFieldName=Member Logs
config.logging.embed.publicMemberField.name=Public Member logs
config.logging.embed.publicMemberField.joinMessage=Join Message
config.logging.embed.publicMemberField.leaveMessage=Leave Message
config.logging.embed.publicMemberField.pingOnJoin=Ping on Join
config.logging.modal.title=Public logging configuration
config.logging.modal.joinMessage.label=What would you like sent when a user joins
config.logging.modal.joinMessage.placeholder=Welcome to the server!
config.logging.modal.leaveMessage.label=What would you like sent when a user leaves
config.logging.modal.leaveMessage.placeholder=Adi√≥s amigo!
config.logging.modal.ping.label=Type `yes` to ping new users when they join
config.logging.modal.ping.placeholder=Defaults to false if input is invalid or not `yes`
config.utility.name=utility
config.utility.description=Configure Lily's utility settings
config.utility.embed.title=Configuration: Utility
config.utility.embed.utilityFieldName=Utility Log
config.utility.embed.channelUpdates=Log Channel updates
config.utility.embed.eventUpdates=Log Event updates
config.utility.embed.inviteUpdates=Log Invite updates
config.utility.embed.roleUpdates=Log Role updates
config.clear.name=clear
config.clear.description=Clear a config type
config.clear.embed.title=Configuration Cleared: {0}
config.clear.noConfigMod=No moderation configuration exists to clear
config.clear.noConfigLogging=No logging configuration exists to clear
config.clear.noConfigUtility=No utility configuration exists to clear
config.clear.all=All configs cleared
config.clear.footer=Config cleared by {0}
config.view.name=view
config.view.description=View the current config you have set
config.view.noModConfig=There is no moderation config for this guild
config.view.noLoggingConfig=There is no logging config for this guild
config.view.noUtilityConfig=There is no utility config for this guild
config.view.currentConfig.modTitle=Current moderation config
config.view.currentConfig.loggingTitle=Current logging config
config.view.currentConfig.utilityTitle=Current utility config
config.view.currentConfig.modDescription=This is the current moderation config for this guild
config.view.currentConfig.loggingDescription=This is the current logging config for this guild
config.view.currentConfig.utilityDescription=This is the current utility config for this guild
config.arguments.moderation.enabled.name=enable-moderation
config.arguments.moderation.enabled.description=Whether to enable the moderation system
config.arguments.moderation.moderatorRole.name=moderator-role
config.arguments.moderation.moderatorRole.description=The role of your moderators, used for pinging in message logs
config.arguments.moderation.modActionLog.name=action-log
config.arguments.moderation.modActionLog.description=The channel used to store moderator actions
config.arguments.moderation.quickTimeout.name=quick-timeout-length
config.arguments.moderation.quickTimeout.description=The length of timeouts to use for quick timeouts
config.arguments.moderation.autoPunish.name=warn-auto-punishments
config.arguments.moderation.autoPunish.description=Whether to automatically punish users for reaching a certain threshold on warns
config.arguments.moderation.dmDefault.name=dm-default
config.arguments.moderation.dmDefault.description=The default value for whether to DM a user in a moderation action
config.arguments.moderation.logPublicly.name=log-publicly
config.arguments.moderation.logPublicly.description=Whether to log moderation publicly or not
config.arguments.moderation.banDm.name=ban-dm-message
config.arguments.moderation.banDm.description=A custom message to send to users when they are banned.
config.arguments.moderation.inviteMods.name=auto-invite-moderator-role
config.arguments.moderation.inviteMods.description=Silent ping moderators to invite them to new threads.
config.arguments.moderation.roleChanges.name=log-member-role-changes
config.arguments.moderation.roleChanges.description=Whether to log changes to the roles members have in a guild.
config.arguments.logging.enableDelete.name=enable-delete-logs
config.arguments.logging.enableDelete.description=Enable logging of message deletions
config.arguments.logging.enableEdit.name=enable-edit-logs
config.arguments.logging.enableEdit.description=Enable logging of message edits
config.arguments.logging.enableMember.name=enable-member-logging
config.arguments.logging.enableMember.description=Enable logging of members joining and leaving the guild
config.arguments.logging.enablePublicMember.name=enable-public-member-logging
config.arguments.logging.enablePublicMember.description=Enable logging of members joining and leaving the guild with a public message
config.arguments.logging.messageLog.name=message-logs
config.arguments.logging.messageLog.description=The channel for logging message deletions
config.arguments.logging.memberLog.name=member-log
config.arguments.logging.memberLog.description=The channel for logging members joining and leaving the guild
config.arguments.logging.publicMemberLog.name=public-member-log
config.arguments.logging.publicMemberLog.description=The channel for the public logging of members joining and leaving the guild
config.arguments.utility.utilityLog.name=utility-log
config.arguments.utility.utilityLog.description=The channel to log various utility actions too.
config.arguments.utility.channelUpdates.name=log-channel-updates
config.arguments.utility.channelUpdates.description=Whether to log changes made to channels in this guild.
config.arguments.utility.eventUpdates.name=log-event-updates
config.arguments.utility.eventUpdates.description=Whether to log changes made to events in this guild.
config.arguments.utility.inviteUpdates.name=log-invite-updates
config.arguments.utility.inviteUpdates.description=Whether to log changes made to invites in this guild.
config.arguments.utility.roleUpdates.name=log-role-updates
config.arguments.utility.roleUpdates.description=Whether to log changes made to roles in this guild.
config.arguments.clear.name=config-type
config.arguments.clear.description=The type of config to clear
config.arguments.clear.choice.moderation=moderation
config.arguments.clear.choice.logging=logging
config.arguments.clear.choice.utility=utility
config.arguments.clear.choice.all=all
config.arguments.view.description=The type of config to view

moderation.clearCommands.clear.name=clear
moderation.clearCommands.clear.description=Parent command for clear commands
moderation.clearCommands.clear.count.name=count
moderation.clearCommands.clear.count.description=Clear a specific count of messages
moderation.clearCommands.clear.before.name=before
moderation.clearCommands.clear.before.description=Clear messages before a given message ID
moderation.clearCommands.clear.before.arguments.before.name=before
moderation.clearCommands.clear.before.arguments.before.description=The ID of the message to clear before
moderation.clearCommands.clear.after.name=after
moderation.clearCommands.clear.after.description=clear messages after a given message ID
moderation.clearCommands.clear.after.arguments.after.name=after
moderation.clearCommands.clear.after.arguments.after.description=The ID of the message to clear after
moderation.clearCommands.clear.between.name=between
moderation.clearCommands.clear.between.description=Clear messages between 2 message ID's
moderation.clearCommands.arguments.author.name=author
moderation.clearCommands.arguments.author.description=The author of the messages to clear
moderation.clearCommands.arguments.count.name=message-count
moderation.clearCommands.arguments.count.description=The number of messages to clear
moderation.clearCommands.error.noChannel=Could not get the channel to clear messages from
moderation.clearCommands.error.beforeAfter=Before cannot be more recent than after
moderation.clearCommands.cleared=Messages cleared.
moderation.clearCommands.numberCleared={0} messages have been cleared
moderation.clearCommands.occurredIn=Action occurred in {0}

moderation.lockingCommands.lock.name=lock
moderation.lockingCommands.lock.description=The parent command for all locking commands
moderation.lockingCommands.channel.name=channel
moderation.lockingCommands.lock.channel.description=Lock a channel so those with default permissions cannot send messages
moderation.lockingCommands.lock.channel.permsError=There was an error getting the permissions for this channel. Please try again.
moderation.lockingCommands.lock.channel.already=This channel is already locked
moderation.lockingCommands.lock.channel.serverLocked=The server is locked, I cannot unlock this channel
moderation.lockingCommands.lock.channel.publicEmbedTitle=Channel Locked
moderation.lockingCommands.lock.channel.publicEmbedDesc=This channel has been locked by a moderator.
moderation.lockingCommands.lock.channel.lockConfirmation={0} has been locked.
moderation.lockingCommands.lock.channel.embedDesc={channel} has been locked.\n\n**Reason:** {reason}
moderation.lockingCommands.lock.channel.arguments.channel.description=Channel to lock. Defaults to current channel
moderation.lockingCommands.lock.channel.arguments.reason.name=reason
moderation.lockingCommands.lock.channel.arguments.reason.description=Reason for locking the channel
moderation.lockingCommands.lock.channel.arguments.reason.default=No reason provided
moderation.lockingCommands.server.name=server
moderation.lockingCommands.lock.server.description=Lock the server so those with default permissions cannot send messages
moderation.lockingCommands.lock.server.already=The server is already locked.
moderation.lockingCommands.lock.server.lockConfirmation=Server locked.
moderation.lockingCommands.lock.server.embedDesc=**Reason:** {0}
moderation.lockingCommands.unlock.name=unlock
moderation.lockingCommands.unlock.description=The parent command for all unlocking commands
moderation.lockingCommands.unlock.channel.description=Unlock a channel so everyone can type messages again
moderation.lockingCommands.unlock.channel.unlockServerToUnlock=Please unlock the server to unlock this channel
moderation.lockingCommands.unlock.channel.notLocked=This channel is not locked!
moderation.lockingCommands.unlock.channel.publicEmbedTitle=Channel Unlocked
moderation.lockingCommands.unlock.channel.publicEmbedDesc=This channel has been unlocked by a moderator.\nPlease be aware of the rules when continuing discussion.
moderation.lockingCommands.unlock.channel.unlockConfirmation={0} has been unlocked.
moderation.lockingCommands.unlock.channel.arguments.channel.description=Channel to unlock. Defaults to current channel
moderation.lockingCommands.unlock.server.description=Unlock the server so everyone can send messages again
moderation.lockingCommands.unlock.server.notLocked=The server isn't locked!
moderation.lockingCommands.unlock.server.unlockConfirmation=Server unlocked.
moderation.lockingCommands.unableToChannel=I can't fetch the targeted channel properly
moderation.lockingCommands.unableToEveryone=I was unable to get the `@everyone` role. Please try again.

threads.autoThreading.name=auto-threading
threads.autoThreading.description=The parent command for auto-threading management.
threads.autoThreading.alreadyOn=Auto-threading is already enabled for this channel.
threads.autoThreading.alreadyOff=Auto-threading is not enabled for this channel.
threads.autoThreading.enable.name=enable
threads.autoThreading.enable.description=Automatically create a thread for each message sent in this channel.
threads.autoThreading.enable.noMention=Lily cannot mention this role. Please fix the role's permissions and try again.
threads.autoThreading.enable.enabled=Auto-threading has been **enabled** in this channel.
threads.autoThreading.enable.embed.title=Auto-threading Enabled
threads.autoThreading.enable.embed.channel=Channel:
threads.autoThreading.enable.embed.role=Role:
threads.autoThreading.enable.embed.preventDuplicates=Prevent Duplicates:
threads.autoThreading.enable.embed.beginArchived=Begin Archived:
threads.autoThreading.enable.embed.smartNaming=Smart Naming Enabled:
threads.autoThreading.enable.embed.mention=Mention:
threads.autoThreading.enable.embed.initialMessage=Initial Message:
threads.autoThreading.disable.name=disable
threads.autoThreading.disable.description=Stop automatically creating threads in this channel.
threads.autoThreading.disable.disabled=Auto-threading has been **disabled** in this channel.
threads.autoThreading.disable.embed.title=Auto-threading Disabled
threads.autoThreading.disable.embed.channel=Channel:
threads.autoThreading.list.name=list
threads.autoThreading.list.description=List all the auto-threaded channels in this server, if any.
threads.autoThreading.list.noChannels=There are no auto-threaded channels in this guild.
threads.autoThreading.list.addNewChannels=Add new ones by using `/auto-threading enable`
threads.autoThreading.list.channelList=Auto-threaded channels in this guild:
threads.autoThreading.list.trimmed=(List trimmed.)
threads.autoThreading.view.name=view
threads.autoThreading.view.description=View the settings of an auto-threaded channel
threads.autoThreading.view.noThreaded=**Error:** This is not an auto-threaded channel!
threads.autoThreading.view.embed.title=Auto-Threaded channel settings
threads.autoThreading.view.embed.description=These are the settings for channel: {0}
threads.autoThreading.view.embed.role=Ping role
threads.autoThreading.view.embed.unable=Unable to get role!
threads.autoThreading.view.embed.extraRoles=Extra Ping Roles
threads.autoThreading.view.embed.preventDuplicates=Prevent Duplicates
threads.autoThreading.view.embed.archiveOnStart=Archive on Creation
threads.autoThreading.view.embed.contentAwareNaming=Content Aware Naming
threads.autoThreading.view.embed.mentionCreator=Mention creator on creation
threads.autoThreading.view.embed.creationMessage=Creation Message
threads.autoThreading.view.embed.addMods=Add mods and ping role
threads.autoThreading.addRoles.name=add-roles
threads.autoThreading.addRoles.description=Add extra roles to threads in auto-threaded channels
threads.autoThreading.addRoles.extraInfo=This command will add roles to be pinged alongside the default ping role for this auto-threaded channel
threads.autoThreading.addRoles.noThreaded=**Error:** This is not an auto-threaded channel!
threads.autoThreading.addRoles.alreadyAdded=This role has already been added.
threads.autoThreading.addRoles.added=Role ({0}) added
threads.autoThreading.removeRoles.name=remove-roles
threads.autoThreading.removeRoles.description=Remove extra roles from threads in auto-threaded channels
threads.autoThreading.removeRoles.extraInfo=This command will remove roles that have been added to be pinged alongside the default ping role for this auto-threaded channel
threads.autoThreading.removeRoles.notAdded=This role has not been added
threads.autoThreading.removeRoles.removed=Role ({0}) removed
threads.autoThreading.arguments.role.name=role
threads.autoThreading.arguments.role.description=The role, if any, to invite to threads created in this channel.
threads.autoThreading.arguments.addMods.name=add-mods-and-role
threads.autoThreading.arguments.addMods.description=Whether to add moderators to the thread alongside the role
threads.autoThreading.arguments.preventDuplicates.name=prevent-duplicates
threads.autoThreading.arguments.preventDuplicates.description=If users should be stopped from having multiple open threads in this channel. Default false.
threads.autoThreading.arguments.archive.name=archive
threads.autoThreading.arguments.archive.description=If threads should be archived on creation to avoid filling the sidebar. Default false.
threads.autoThreading.arguments.contentAware.name=content-aware-naming
threads.autoThreading.arguments.contentAware.description=If Lily should use content-aware thread titles. Default false
threads.autoThreading.arguments.mention.name=mention
threads.autoThreading.arguments.mention.description=If the creator should be mentioned in new threads in this channel. Default false.
threads.autoThreading.arguments.message.name=message
threads.autoThreading.arguments.message.description=Whether to send a custom message on thread creation or not. Default false.
threads.autoThreading.arguments.extraRole.description=A role to invite to threads in this channel
threads.autoThreading.arguments.channel.name=channel
threads.autoThreading.arguments.channel.description=The channel to view the auto-threading settings for.
threads.autoThreading.modal.title=Thread Creation Message Configuration
threads.autoThreading.modal.msgInput.name=Thread Creation Message
threads.autoThreading.modal.msgInput.placeholder=Input the content of the message to send when a thread is created in this channel
threads.autoThreading.threadFor=Thread for {0}
threads.autoThreading.existingThread=Please use your existing thread in this channel {0}

threads.threadControl.name=thread
threads.threadControl.description=The parent command for all /thread commands
threads.threadControl.rename.name=rename
threads.threadControl.rename.description=Rename a thread!
threads.threadControl.rename.renamedBy=Renamed by {0}
threads.threadControl.rename.renamed=Thread renamed!
threads.threadControl.archive.name=archive
threads.threadControl.archive.description=Archive this thread
threads.threadControl.archive.preventionDisabled.title=Thread archive prevention disabled
threads.threadControl.archive.preventionDisabled.description=Archive prevention has been disabled, as `/thread archive` was used.
threads.threadControl.archive.user=User
threads.threadControl.archive.thread=Thread
threads.threadControl.archive.already=**Error:** This channel is already archived!
threads.threadControl.archive.archivedBy=Archived by {0}
threads.threadControl.archive.response=Thread archived
threads.threadControl.archive.responseLock= and locked
threads.threadControl.transfer.name=transfer
threads.threadControl.transfer.description=Transfer ownership of this thread
threads.threadControl.transfer.alreadyOwns=That person already owns the thread!
threads.threadControl.transfer.cannotBot=You cannot transfer ownership of a thread to a bot
threads.threadControl.transfer.success=Ownership transferred.
threads.threadControl.transfer.fromTo=Thread ownership transferred from {old} to {new}
threads.threadControl.transfer.transferredBy=Transferred by {0}
threads.threadControl.transfer.embed.title=Thread ownership transferred
threads.threadControl.transfer.embed.prevOwner=Previous owner
threads.threadControl.transfer.embed.cannotFind=Unable to find previous owner
threads.threadControl.transfer.embed.newOwner=New owner
threads.threadControl.preventArchiving.name=prevent-archived
threads.threadControl.preventArchiving.description=Stop a thread from being archived
threads.threadControl.preventArchiving.alreadyPreventedWarning=Thread archiving is already being prevented, would you like to remove this?
threads.threadControl.preventArchiving.noLongerPrevented=Thread archiving will no longer be prevented
threads.threadControl.preventArchiving.stillPrevented=Thread archiving will remain prevented
threads.threadControl.preventArchiving.embed.title=Thread archive prevent enabled
threads.threadControl.preventArchiving.nowPrevented=Thread archiving will now be prevented
threads.threadControl.preventArchiving.nowPreventedNoLog=Thread archiving will now be prevented\nNote: Failed to send a log to your specified mod action log. Please check the channel exists and permissions are correct
threads.threadControl.fetchIssue=Are you sure this channel is a thread? If it is, I can't fetch it properly.
threads.threadControl.arguments.rename.newName.name=new-name
threads.threadControl.arguments.rename.newName.description=The new name to give to the thread
threads.threadControl.arguments.archive.lock.name=lock
threads.threadControl.arguments.archive.lock.description=Whether to lock the thread if you are a moderator. Default is false.
threads.threadControl.arguments.transfer.newOwner.name=new-owner
threads.threadControl.arguments.transfer.newOwner.description=The user you want to transfer ownership of the thread to
threads.threadControl.notYours=**Error:** This is not your thread!

events.memberLogging.memberEvent.footer=Member count {0}
events.memberLogging.memberEvent.embedId=ID:
events.memberLogging.memberJoin.embedAuthor=User joined the server!
events.memberLogging.memberJoin.embedWelcome=Welcome:
events.memberLogging.memberJoin.publicEmbedAuthor=Welcome {0}
events.memberLogging.memberJoin.publicEmbedWelcomeMessage=Welcome to the server
events.memberLogging.memberLeave.embedAuthor=User left the server!
events.memberLogging.memberLeave.embedGoodbye=Goodbye:
events.memberLogging.memberLeave.publicEmbedAuthor=Goodbye {0}
events.memberLogging.memberLeave.publicEmbedGoodbyeMessage=Farewell!

events.messageEvent.location=Location: {0} ({1})
events.messageEvent.failedContents=Failed to retrieve previous message contents

events.messageDelete.noChannelName=Could not get channel name
events.messageDelete.single.embedAuthor=Message deleted
events.messageDelete.single.embedContents=Message Contents
events.messageDelete.bulk.embedTitle=Bulk Message Delete
events.messageDelete.bulk.embedDescription=A Bulk delete of message occurred
events.messageDelete.bulk.embedLocation=Location
events.messageDelete.bulk.embedNumber=Number of Messages
events.messageDelete.bulk.embedFailedContent=The messages from this event could not be gathered and logged

events.messageEdit.embedAuthor=Message edited
events.messageEdit.embedPrevious=Previous Contents
events.messageEdit.embedNew=New Contents
events.messageEdit.embedNewFail=Failed to retrieve new message contents
events.messageEdit.embedButton=Jump

events.moderation.ban.banned=Banned
events.moderation.ban.softBanned=Soft-Banned
events.moderation.ban.tempBanned=Temporarily Banned
events.moderation.ban.aUser=a user!
events.moderation.ban.banDescription={0} has been
events.moderation.ban.defaultBanDescription={0} has been banned!
events.moderation.ban.deleteDays=Days of messages deleted
events.moderation.ban.duration=Duration:
events.moderation.unban.tempRemoved=Temporary ban removed
events.moderation.unban.unbanned=Unbanned a user
events.moderation.unban.description={0} has
events.moderation.unban.tempRemovedDesc=had their temporary ban removed!
events.moderation.unban.unbannedDesc=been unbanned!
events.moderation.unban.reason=Reason:
events.moderation.unban.initialDate=Initial Ban date:
events.moderation.memberUpdate.timeoutRemoved=Timeout removed
events.moderation.memberUpdate.timeoutAdded=Timeout
events.moderation.memberUpdate.viaMenu=via Discord menus
events.moderation.memberUpdate.updatedTitle=Member updates
events.moderation.memberUpdate.updatedDesc={0} has been updated
events.moderation.memberUpdate.nickChange=Nickname changed
events.moderation.memberUpdate.nickChangeVal=Old: {old}\nNew: {new}
events.moderation.memberUpdate.newRoles=New Roles
events.moderation.memberUpdate.oldRoles=Old Roles

utility.publicUtilities.ping.name=ping
utility.publicUtilities.ping.description=Am I alive?
utility.publicUtilities.ping.title=Pong!
utility.publicUtilities.ping.pingValue="Lily's Ping to Discord is:"
utility.publicUtilities.nickname.name=nickname
utility.publicUtilities.nickname.description=The parent command for all nickname commands
utility.publicUtilities.nickname.request.name=request
utility.publicUtilities.nickname.request.description=Request a new nickname for this server!
utility.publicUtilities.nickname.request.lilyNoRolePublic=You have a role and Lily does not, so she cannot change your nickname
utility.publicUtilities.nickname.request.lilyNoRolePrivate="This user has a role and Lily does not, so she cannot change their nickname. Please fix Lily's roles and then try again"
utility.publicUtilities.nickname.request.highestRolePublic="Your highest role is above Lily's, so she cannot change your nickname"
utility.publicUtilities.nickname.request.highestRolePrivate="This user's highest role is above Lily's, so she cannot change their nickname. Please fix Lily's permissions and try again"
utility.publicUtilities.nickname.request.hasPermission="You have permission to change your own nickname, so I've just made the change"
utility.publicUtilities.nickname.request.sent=Nickname request sent!
utility.publicUtilities.nickname.request.embedTitle=Nickname Request
utility.publicUtilities.nickname.userField=User:
utility.publicUtilities.nickname.request.embedCurrentNick=Current Nickname:
utility.publicUtilities.nickname.request.embedRequestedNick=Requested Nickname:
utility.publicUtilities.nickname.request.logEmbed.acceptTitle=Nickname Request Accepted
utility.publicUtilities.nickname.request.logEmbed.previousNick=Previous Nickname:
utility.publicUtilities.nickname.request.logEmbed.acceptedNick=Accepted Nickname:
utility.publicUtilities.nickname.request.logEmbed.acceptedBy=Nickname accepted by {0}
utility.publicUtilities.nickname.request.logEmbed.denyTitle=Nickname Request Denied
utility.publicUtilities.nickname.request.logEmbed.currentNick=Current Nickname:
utility.publicUtilities.nickname.request.logEmbed.rejectedNick=Rejected Nickname:
utility.publicUtilities.nickname.request.logEmbed.deniedBy=Nickname denied by {0}
utility.publicUtilities.nickname.request.dm.acceptTitle=Nickname Change Accepted in {0}
utility.publicUtilities.nickname.request.dm.acceptDescription=Nickname update from `{0}` to `{1}`
utility.publicUtilities.nickname.request.dm.denyTitle=Nickname Request Denied
utility.publicUtilities.nickname.request.dm.denyDescription=Moderators have reviewed your nickname request (`{0}`) and rejected it.\nPlease try a different nickname
utility.publicUtilities.nickname.request.button.accept=Accept
utility.publicUtilities.nickname.request.button.deny=Deny
utility.publicUtilities.nickname.request.args.newNick.name=nickname
utility.publicUtilities.nickname.request.args.newNick.description=The new nickname you would like
utility.publicUtilities.nickname.clear.name=clear
utility.publicUtilities.nickname.clear.description=Clear your current nickname
utility.publicUtilities.nickname.clear.nothingToClear=You have no nickname to clear!
utility.publicUtilities.nickname.clear.cleared=Nickname Cleared!
utility.publicUtilities.nickname.clear.logEmbed.title=Nickname Cleared
utility.publicUtilities.nickname.clear.logEmbed.newNickTitle=New Nickname:
utility.publicUtilities.nickname.clear.logEmbed.newNickValue=Nickname changed from `{0}` to `null`
utility.publicUtilities.nickname.failToSend=Error sending message to moderators. Please ask the moderators to check the `UTILITY` config.
